// "FurnInterpreter.exe" scripts/Main.fn

$include "Str.fn"
$include "Map.fn"

use lib Std
use lib Std::Terminal
use Std::System::Execute
// (){}[]

// cant use Std::Exit in functions map
// because its an external C function
// and that isnt the same type as fn
fn exit() => Exit(0)

fn help() do
	WriteLn("\nCommands:")
	for string k: fn function in functions do
		WriteLn(k)
	esc
	
	WriteLn()
esc

fn clear() => ClearIO()
fn lock() => Execute("rundll32.exe user32.dll, LockWorkStation")

fn echo() do
	var string Text = ReadLn()
	WriteLn(Text)
esc

var {fn} functions = {
	(fn)
	["help"]: help,
	["close"]: exit,
	["lock"]: lock,
	["clear"]: clear,
	["echo"]: echo,
}

fn Main() do
	Map::pprint::Function(functions)
	for true do
		Write("Input: ")
		
		var string Input = ReadLn()
		Input = Str::Trim(Input) // trim white space
		Input = Str::Lower(Input) // make lowercase
		
		if Input != '' do
			var fn function = functions[Input]
			
			if function do
				function()
			else do
				WriteLn("Unknown command '", Input, "'")
			esc
		esc
	esc
esc