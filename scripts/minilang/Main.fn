

#include "Lexer.fn"
#include "Token.fn"
#include "Ast.fn"
#include "Parser.fn"
#include "Interpreter.fn"

fn Main():
  var Lexer l(r'

  x = 7
  print x
  x = "string"
  print x

  ')
  var {} of <Token> Tokens = l.Lex()
  Std::Console::WriteLn("Tokens: ", Tokens)

  var Parser p(Tokens)
  var {} of <any> Nodes = p.Parse()
  Std::Console::WriteLn("\nNodes: ", Nodes)

  Std::Console::WriteLn("\nOutput:")

  var Interpreter Interp(Nodes)
  Interp.Execute()
  Std::Console::WriteLn("\nGlobal Scope: ", Interp.GlobalScope)
esc

